//Author	Dexter Barrows


File list
*********************************************************
sAES.c	- The C99 source file
input 	- sample input file with data
README	- this README
*********************************************************

Instructions
*************************************************************************************************************************

sAES takes 4 command line arguments in order:
----------------------------------------------------------------

-e / -d							-> tells the program to encrypt or decrypt
input file name					-> the name of the file containing the plaintext or ciphertext depending on -e / -d
keys							-> the key to use
output file name				-> the name of the file to put the ciphertext or plaintext depending on -e / -d

Note that the input is assumed to be multiples of 8-bit blocks (two hex characters) and already padded if necessary.


Examples:
---------

Input:		>> ./sAES -e input a73b output 			-> tells the program to encrypt the data in "input" using key "a73b"
Output:		Set to encrypt.							-> running in encryption mode
			File data:	6f6bd728					-> data read from file as-is
			Data size: 	8 nibbles					-> number of nibbles of data (must be a multiple of 4 i.e. 16-bits)
			Key:		0xA73B						-> key as read by program
			Plaintext:	0x6F6BD728					-> plaintext as read by program
			Ciphertext:	0x07388888					-> resulting ciphertext

Input:		>> ./sAES -d output a73b in_prime		-> tells the program to decrypt the data in "output" using key "a73b"
Output:		Set to decrypt.							-> running in decryption mode
			File data:	07388888 					-> data read from file as-is
			Data size: 	8 nibbles 					-> number of nibbles of data (must be a multiple of 4 i.e. 16-bits)
			Key:		0xA73B						-> key as read by program
			Ciphertext:	0x07388888					-> ciphertext as read by program
			Plaintext:	0x6F6BD728					-> resulting plaintext

Then running:

>> cat input 
6f6bd728
>> cat in_prime
6F6BD728

shows that encryption/decryption was successful.


*************************************************************************************************************************
